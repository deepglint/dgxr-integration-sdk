// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: metapos.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SceneIDMask int32

const (
	SceneIDMask_None           SceneIDMask = 0
	SceneIDMask_AvatarMask     SceneIDMask = 1 // ⼈形重建
	SceneIDMask_BasketBallMask SceneIDMask = 2 // 篮球重建
	SceneIDMask_ActionMask     SceneIDMask = 3 // 动作分类
)

// Enum value maps for SceneIDMask.
var (
	SceneIDMask_name = map[int32]string{
		0: "None",
		1: "AvatarMask",
		2: "BasketBallMask",
		3: "ActionMask",
	}
	SceneIDMask_value = map[string]int32{
		"None":           0,
		"AvatarMask":     1,
		"BasketBallMask": 2,
		"ActionMask":     3,
	}
)

func (x SceneIDMask) Enum() *SceneIDMask {
	p := new(SceneIDMask)
	*p = x
	return p
}

func (x SceneIDMask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneIDMask) Descriptor() protoreflect.EnumDescriptor {
	return file_metapos_proto_enumTypes[0].Descriptor()
}

func (SceneIDMask) Type() protoreflect.EnumType {
	return &file_metapos_proto_enumTypes[0]
}

func (x SceneIDMask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneIDMask.Descriptor instead.
func (SceneIDMask) EnumDescriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{0}
}

type RecAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action     int32   `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Tagnameid  uint32  `protobuf:"varint,3,opt,name=tagnameid,proto3" json:"tagnameid,omitempty"`
}

func (x *RecAction) Reset() {
	*x = RecAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecAction) ProtoMessage() {}

func (x *RecAction) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecAction.ProtoReflect.Descriptor instead.
func (*RecAction) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{0}
}

func (x *RecAction) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *RecAction) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *RecAction) GetTagnameid() uint32 {
	if x != nil {
		return x.Tagnameid
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objs       []*DataKeypoints `protobuf:"bytes,1,rep,name=objs,proto3" json:"objs,omitempty"`
	RecActions []*RecAction     `protobuf:"bytes,2,rep,name=rec_actions,json=recActions,proto3" json:"rec_actions,omitempty"`
	Uid        int32            `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{1}
}

func (x *Data) GetObjs() []*DataKeypoints {
	if x != nil {
		return x.Objs
	}
	return nil
}

func (x *Data) GetRecActions() []*RecAction {
	if x != nil {
		return x.RecActions
	}
	return nil
}

func (x *Data) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type StructData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreeDim map[string]*Data `protobuf:"bytes,2,rep,name=threeDim,proto3" json:"threeDim,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StructData) Reset() {
	*x = StructData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructData) ProtoMessage() {}

func (x *StructData) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructData.ProtoReflect.Descriptor instead.
func (*StructData) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{2}
}

func (x *StructData) GetThreeDim() map[string]*Data {
	if x != nil {
		return x.ThreeDim
	}
	return nil
}

type Types struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Types:
	//
	//	*Types_Str
	//	*Types_Int
	Types isTypes_Types `protobuf_oneof:"types"`
}

func (x *Types) Reset() {
	*x = Types{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Types) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Types) ProtoMessage() {}

func (x *Types) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Types.ProtoReflect.Descriptor instead.
func (*Types) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{3}
}

func (m *Types) GetTypes() isTypes_Types {
	if m != nil {
		return m.Types
	}
	return nil
}

func (x *Types) GetStr() string {
	if x, ok := x.GetTypes().(*Types_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Types) GetInt() int32 {
	if x, ok := x.GetTypes().(*Types_Int); ok {
		return x.Int
	}
	return 0
}

type isTypes_Types interface {
	isTypes_Types()
}

type Types_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type Types_Int struct {
	Int int32 `protobuf:"varint,2,opt,name=int,proto3,oneof"`
}

func (*Types_Str) isTypes_Types() {}

func (*Types_Int) isTypes_Types() {}

type EventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchedInfo []*EventDataMatchedInner `protobuf:"bytes,1,rep,name=matched_info,json=matchedInfo,proto3" json:"matched_info,omitempty"`
	GoalInfo    []*EventDataGoalInner    `protobuf:"bytes,2,rep,name=goal_info,json=goalInfo,proto3" json:"goal_info,omitempty"`
	ThrowInfo   []*EventDataThrowInner   `protobuf:"bytes,3,rep,name=throw_info,json=throwInfo,proto3" json:"throw_info,omitempty"`
	ScoreInfo   []*EventDataScoreInner   `protobuf:"bytes,4,rep,name=score_info,json=scoreInfo,proto3" json:"score_info,omitempty"`
}

func (x *EventData) Reset() {
	*x = EventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{4}
}

func (x *EventData) GetMatchedInfo() []*EventDataMatchedInner {
	if x != nil {
		return x.MatchedInfo
	}
	return nil
}

func (x *EventData) GetGoalInfo() []*EventDataGoalInner {
	if x != nil {
		return x.GoalInfo
	}
	return nil
}

func (x *EventData) GetThrowInfo() []*EventDataThrowInner {
	if x != nil {
		return x.ThrowInfo
	}
	return nil
}

func (x *EventData) GetScoreInfo() []*EventDataScoreInner {
	if x != nil {
		return x.ScoreInfo
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raisehand bool `protobuf:"varint,1,opt,name=raisehand,proto3" json:"raisehand,omitempty"`
	Pulldown  bool `protobuf:"varint,2,opt,name=pulldown,proto3" json:"pulldown,omitempty"`
	Crouch    bool `protobuf:"varint,3,opt,name=crouch,proto3" json:"crouch,omitempty"`
	Jump      bool `protobuf:"varint,4,opt,name=jump,proto3" json:"jump,omitempty"`
	Cheer     bool `protobuf:"varint,5,opt,name=cheer,proto3" json:"cheer,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{5}
}

func (x *Action) GetRaisehand() bool {
	if x != nil {
		return x.Raisehand
	}
	return false
}

func (x *Action) GetPulldown() bool {
	if x != nil {
		return x.Pulldown
	}
	return false
}

func (x *Action) GetCrouch() bool {
	if x != nil {
		return x.Crouch
	}
	return false
}

func (x *Action) GetJump() bool {
	if x != nil {
		return x.Jump
	}
	return false
}

func (x *Action) GetCheer() bool {
	if x != nil {
		return x.Cheer
	}
	return false
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrameId   string                 `protobuf:"bytes,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	TimeStamp string                 `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Result    map[string]*StructData `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Event     *EventData             `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	Action    map[string]*Action     `protobuf:"bytes,5,rep,name=action,proto3" json:"action,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{6}
}

func (x *Request) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *Request) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *Request) GetResult() map[string]*StructData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Request) GetEvent() *EventData {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Request) GetAction() map[string]*Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pid int32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerInfo) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PlayerInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgCode int32         `protobuf:"varint,1,opt,name=msg_code,json=msgCode,proto3" json:"msg_code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Players []*PlayerInfo `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	SceneId int32         `protobuf:"varint,4,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{8}
}

func (x *Response) GetMsgCode() int32 {
	if x != nil {
		return x.MsgCode
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Response) GetSceneId() int32 {
	if x != nil {
		return x.SceneId
	}
	return 0
}

type DataKeypoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []float32 `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *DataKeypoints) Reset() {
	*x = DataKeypoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataKeypoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataKeypoints) ProtoMessage() {}

func (x *DataKeypoints) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataKeypoints.ProtoReflect.Descriptor instead.
func (*DataKeypoints) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DataKeypoints) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type EventDataMatchedInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*Types `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *EventDataMatchedInner) Reset() {
	*x = EventDataMatchedInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDataMatchedInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDataMatchedInner) ProtoMessage() {}

func (x *EventDataMatchedInner) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDataMatchedInner.ProtoReflect.Descriptor instead.
func (*EventDataMatchedInner) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{4, 0}
}

func (x *EventDataMatchedInner) GetValue() []*Types {
	if x != nil {
		return x.Value
	}
	return nil
}

type EventDataGoalInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*Types `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *EventDataGoalInner) Reset() {
	*x = EventDataGoalInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDataGoalInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDataGoalInner) ProtoMessage() {}

func (x *EventDataGoalInner) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDataGoalInner.ProtoReflect.Descriptor instead.
func (*EventDataGoalInner) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{4, 1}
}

func (x *EventDataGoalInner) GetValue() []*Types {
	if x != nil {
		return x.Value
	}
	return nil
}

type EventDataThrowInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*Types `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *EventDataThrowInner) Reset() {
	*x = EventDataThrowInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDataThrowInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDataThrowInner) ProtoMessage() {}

func (x *EventDataThrowInner) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDataThrowInner.ProtoReflect.Descriptor instead.
func (*EventDataThrowInner) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{4, 2}
}

func (x *EventDataThrowInner) GetValue() []*Types {
	if x != nil {
		return x.Value
	}
	return nil
}

type EventDataScoreInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*Types `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *EventDataScoreInner) Reset() {
	*x = EventDataScoreInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metapos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDataScoreInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDataScoreInner) ProtoMessage() {}

func (x *EventDataScoreInner) ProtoReflect() protoreflect.Message {
	mi := &file_metapos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDataScoreInner.ProtoReflect.Descriptor instead.
func (*EventDataScoreInner) Descriptor() ([]byte, []int) {
	return file_metapos_proto_rawDescGZIP(), []int{4, 3}
}

func (x *EventDataScoreInner) GetValue() []*Types {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_metapos_proto protoreflect.FileDescriptor

var file_metapos_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x70, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x09, 0x52, 0x65, 0x63,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x61, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x61, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x6f, 0x62, 0x6a, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x04, 0x6f, 0x62, 0x6a, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x76,
	0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x1a, 0x21, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x65, 0x65, 0x44, 0x69, 0x6d, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x44, 0x69, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x44, 0x69, 0x6d, 0x1a, 0x4e, 0x0a, 0x0d, 0x54, 0x68, 0x72, 0x65, 0x65, 0x44,
	0x69, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33,
	0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a, 0x05, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x22, 0xff, 0x03, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47,
	0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x76, 0x73,
	0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x67,
	0x6f, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x6f, 0x77,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x76,
	0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x09, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x39, 0x0a,
	0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x36, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x37, 0x0a, 0x0b, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x37, 0x0a, 0x0b, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x61, 0x69, 0x73, 0x65, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x72, 0x61, 0x69, 0x73, 0x65, 0x68, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x75, 0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70,
	0x75, 0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x6f, 0x75, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x6f, 0x75, 0x63, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6a,
	0x75, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x65, 0x72, 0x22, 0x89, 0x03, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33,
	0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x52, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x76, 0x73,
	0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x2a, 0x4b, 0x0a, 0x0b, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x44, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4d, 0x61, 0x73, 0x6b, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x4d, 0x61,
	0x73, 0x6b, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x73, 0x6b, 0x10, 0x03, 0x32, 0x97, 0x01, 0x0a, 0x0c, 0x54, 0x68, 0x72, 0x65, 0x65, 0x44, 0x69,
	0x6d, 0x53, 0x6b, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x44, 0x69, 0x6d, 0x53, 0x6b, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x14, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x76, 0x73, 0x6e, 0x33, 0x64, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03,
	0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metapos_proto_rawDescOnce sync.Once
	file_metapos_proto_rawDescData = file_metapos_proto_rawDesc
)

func file_metapos_proto_rawDescGZIP() []byte {
	file_metapos_proto_rawDescOnce.Do(func() {
		file_metapos_proto_rawDescData = protoimpl.X.CompressGZIP(file_metapos_proto_rawDescData)
	})
	return file_metapos_proto_rawDescData
}

var file_metapos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_metapos_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_metapos_proto_goTypes = []interface{}{
	(SceneIDMask)(0),              // 0: dvsn3dframe.SceneIDMask
	(*RecAction)(nil),             // 1: dvsn3dframe.RecAction
	(*Data)(nil),                  // 2: dvsn3dframe.Data
	(*StructData)(nil),            // 3: dvsn3dframe.StructData
	(*Types)(nil),                 // 4: dvsn3dframe.Types
	(*EventData)(nil),             // 5: dvsn3dframe.EventData
	(*Action)(nil),                // 6: dvsn3dframe.Action
	(*Request)(nil),               // 7: dvsn3dframe.Request
	(*PlayerInfo)(nil),            // 8: dvsn3dframe.PlayerInfo
	(*Response)(nil),              // 9: dvsn3dframe.Response
	(*DataKeypoints)(nil),         // 10: dvsn3dframe.Data.keypoints
	nil,                           // 11: dvsn3dframe.StructData.ThreeDimEntry
	(*EventDataMatchedInner)(nil), // 12: dvsn3dframe.EventData.matched_inner
	(*EventDataGoalInner)(nil),    // 13: dvsn3dframe.EventData.goal_inner
	(*EventDataThrowInner)(nil),   // 14: dvsn3dframe.EventData.throw_inner
	(*EventDataScoreInner)(nil),   // 15: dvsn3dframe.EventData.score_inner
	nil,                           // 16: dvsn3dframe.Request.ResultEntry
	nil,                           // 17: dvsn3dframe.Request.ActionEntry
	(*emptypb.Empty)(nil),         // 18: google.protobuf.Empty
}
var file_metapos_proto_depIdxs = []int32{
	10, // 0: dvsn3dframe.Data.objs:type_name -> dvsn3dframe.Data.keypoints
	1,  // 1: dvsn3dframe.Data.rec_actions:type_name -> dvsn3dframe.RecAction
	11, // 2: dvsn3dframe.StructData.threeDim:type_name -> dvsn3dframe.StructData.ThreeDimEntry
	12, // 3: dvsn3dframe.EventData.matched_info:type_name -> dvsn3dframe.EventData.matched_inner
	13, // 4: dvsn3dframe.EventData.goal_info:type_name -> dvsn3dframe.EventData.goal_inner
	14, // 5: dvsn3dframe.EventData.throw_info:type_name -> dvsn3dframe.EventData.throw_inner
	15, // 6: dvsn3dframe.EventData.score_info:type_name -> dvsn3dframe.EventData.score_inner
	16, // 7: dvsn3dframe.Request.result:type_name -> dvsn3dframe.Request.ResultEntry
	5,  // 8: dvsn3dframe.Request.event:type_name -> dvsn3dframe.EventData
	17, // 9: dvsn3dframe.Request.action:type_name -> dvsn3dframe.Request.ActionEntry
	8,  // 10: dvsn3dframe.Response.players:type_name -> dvsn3dframe.PlayerInfo
	2,  // 11: dvsn3dframe.StructData.ThreeDimEntry.value:type_name -> dvsn3dframe.Data
	4,  // 12: dvsn3dframe.EventData.matched_inner.value:type_name -> dvsn3dframe.Types
	4,  // 13: dvsn3dframe.EventData.goal_inner.value:type_name -> dvsn3dframe.Types
	4,  // 14: dvsn3dframe.EventData.throw_inner.value:type_name -> dvsn3dframe.Types
	4,  // 15: dvsn3dframe.EventData.score_inner.value:type_name -> dvsn3dframe.Types
	3,  // 16: dvsn3dframe.Request.ResultEntry.value:type_name -> dvsn3dframe.StructData
	6,  // 17: dvsn3dframe.Request.ActionEntry.value:type_name -> dvsn3dframe.Action
	18, // 18: dvsn3dframe.ThreeDimSkel.ServiceCheck:input_type -> google.protobuf.Empty
	7,  // 19: dvsn3dframe.ThreeDimSkel.SendThreeDimSkelData:input_type -> dvsn3dframe.Request
	18, // 20: dvsn3dframe.ThreeDimSkel.ServiceCheck:output_type -> google.protobuf.Empty
	9,  // 21: dvsn3dframe.ThreeDimSkel.SendThreeDimSkelData:output_type -> dvsn3dframe.Response
	20, // [20:22] is the sub-list for method output_type
	18, // [18:20] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_metapos_proto_init() }
func file_metapos_proto_init() {
	if File_metapos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metapos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Types); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataKeypoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDataMatchedInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDataGoalInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDataThrowInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metapos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDataScoreInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_metapos_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Types_Str)(nil),
		(*Types_Int)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metapos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metapos_proto_goTypes,
		DependencyIndexes: file_metapos_proto_depIdxs,
		EnumInfos:         file_metapos_proto_enumTypes,
		MessageInfos:      file_metapos_proto_msgTypes,
	}.Build()
	File_metapos_proto = out.File
	file_metapos_proto_rawDesc = nil
	file_metapos_proto_goTypes = nil
	file_metapos_proto_depIdxs = nil
}
