.get-branch-script: &get-branch-script
  # CI_COMMIT_BRANCH在PR和tag事件中无效，需要单独处理
  - if [ -z $CI_COMMIT_BRANCH ]; then export CI_COMMIT_BRANCH=$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME; fi
  # tag事件只能取默认分支：因为tag与分支并无一对一关系
  - if [ -z $CI_COMMIT_BRANCH ]; then export CI_COMMIT_BRANCH=$CI_DEFAULT_BRANCH; fi

# gitlab pipelines
default:
  interruptible: true
  # 指定runner的tag
  tags:
    - alpha-ci

variables:
  GIT_DEPTH: 1
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  PRODUCTION_TAG_REG: '/^v[0-9]+(\.[0-9]+){2,3}$/'
  COS_REPO: https://star-deploy-1253924368.cos.ap-beijing.myqcloud.com/unity

stages:
  - prepare
  - deploy
  - publish

workflow:
  rules:
    # 不处理draft的事件
    - if: $CI_COMMIT_MESSAGE =~ /^draft/i
      when: never
    - if: $CI_JOB_MANUAL

test:prepare:
  stage: .pre
  image: ccr.ccs.tencentyun.com/solution/docker:20.10.15-alpine3.15
  before_script:
    - docker system prune --force --volumes || true
    - mkdir -p /results/$CI_PIPELINE_ID
    - *get-branch-script
    - echo "CI_COMMIT_BRANCH=$CI_COMMIT_BRANCH" > .env
    - echo $CI_PIPELINE_SOURCE
    - echo $PACKAGE_MANAGER_SET
  script:
    - echo $CI_PIPELINE_ID
  artifacts:
    reports:
      dotenv: .env

test:summary:
  stage: .post
  variables:
    GIT_STRATEGY: none
  dependencies:
    - test:prepare
  image: ccr.ccs.tencentyun.com/solution/python-requests:2.7.18-alpine3.11
  before_script:
    - echo $CI_COMMIT_BRANCH
  script:
    - trap 'rm -rf  /results/$CI_PIPELINE_ID' EXIT
  when: always


.deploy: &deploy
  stage: deploy
  trigger:
    include: .gitlab/ci/build-deploy.gitlab-ci.yml
    strategy: depend
  allow_failure: true

deploy:
  <<: *deploy
  variables:
    CI_ENVIRONMENT_NAME: prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-alpha\d+|-beta\d+)?$/'