variables:
  GIT_DEPTH: 1
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  PRODUCTION_TAG_REG: '/^v[0-9]+(\.[0-9]+){2,3}$/'
  BUILD_NAME: stardust
  UNITY_ACTIVATION_FILE: ./unity3d.alf
  UNITY_VERSION: "2022.3.7f1"
  IMAGE: unityci/editor # https://hub.docker.com/r/unityci/editor
  IMAGE_VERSION: 1 # This will automatically use latest v1.x.x, see https://github.com/game-ci/docker/releases
  UNITY_DIR: $CI_PROJECT_DIR # this needs to be an absolute path. Defaults to the root of your tree.
  # You can expose this in Unity via Application.version
  VERSION_NUMBER_VAR: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID-$CI_JOB_ID
  VERSION_BUILD_VAR: $CI_PIPELINE_IID

image: $IMAGE:$UNITY_VERSION-base-$IMAGE_VERSION

.build: &build
  stage: build stardust
  image: ccr.ccs.tencentyun.com/solution/go-gcc-mingw-w64:0.1
  needs: 
    - build:prepare

.unity_before_script: &unity_before_script
  before_script:
    - export UNITY_DIR=$CI_PROJECT_DIR
    - chmod +x ./ci/before_script.sh && ./ci/before_script.sh
  needs:
    - job: get-unity-version
      artifacts: true

.cache: &cache
  cache:
    key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-$TEST_PLATFORM"
    paths:
      - $UNITY_DIR/Library/

.license: &license
  rules:
    - if: '$UNITY_LICENSE != null'
      when: always

.ci_defaults: &ci_defaults
  tags:
    - alpha-ci

.unity_defaults: &unity_defaults
  <<:
    - *unity_before_script
    - *cache
    - *license
    - *ci_defaults

get-unity-version:
  stage: build pre
  image: alpine
  variables:
    GIT_DEPTH: 1
  script:
    - echo UNITY_VERSION=$(cat $UNITY_DIR/ProjectSettings/ProjectVersion.txt | grep "m_EditorVersion:.*" | awk '{ print $2}') | tee prepare.env
  artifacts:
    reports:
      dotenv: prepare.env
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-alpha\d+|-beta\d+)?$/'
  
cache: # 缓存
  paths:
    - $UNITY_DIR/code_docs

generate_doc:
  stage: build stardust
  needs:
    - job: get-unity-version
  script:
    - echo "Installing dependencies for Doxygen generation..."
    - apt-get update 
    - apt-get install -y doxygen
    - apt-get install -y graphviz
    - chmod +x $UNITY_DIR/ci/generate_doc.sh && $UNITY_DIR/ci/generate_doc.sh
  artifacts:
    paths:
      - $UNITY_DIR/code_docs
    name: dgxr-doc-$CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-alpha\d+|-beta\d+)?$/'


get-activation-file:
  <<: *unity_before_script
  rules:
    - if: '$UNITY_LICENSE == null'
      when: manual
  stage: build pre
  script:
    - chmod +x ./ci/get_activation_file.sh && ./ci/get_activation_file.sh
  artifacts:
    paths:
      - $UNITY_ACTIVATION_FILE
    expire_in: 10 min # Expiring this as artifacts may contain sensitive data and should not be kept public

npm_publish:
  <<: *build
  image: node:18.12.1-alpine3.15
  needs:
    - job: get-unity-version
  script:
    - sed -i "s/public const string SdkVersionCode = \"\";/public const string SdkVersionCode = \"$CI_COMMIT_TAG\";/g" ./Assets/Deepglint/XR/Toolkit/DebugTool/VersionCode.cs
    - echo "https://mirrors.ustc.edu.cn/alpine/v3.15/main" > /etc/apk/repositories
    - echo "https://mirrors.ustc.edu.cn/alpine/v3.15/community" >> /etc/apk/repositories
    - apk update
    - apk add jq
    - cd Assets
    - version=`echo $CI_COMMIT_TAG | sed 's/^v//g'`
    - jq --arg new_version "$version" --arg doc_url "$COS_REPO/dgxr/dgxr-doc-$CI_COMMIT_TAG/html/index.html" \
      '.version = $new_version | .documentationUrl = $doc_url' package.json > tmp.json && mv tmp.json package.json
    - cat package.json
    - npm config set registry http://package.nemoface.com/repository/unity
    - echo "//package.nemoface.com/repository/:_authToken=\${CI_NPM_TOKEN}" >> ~/.npmrc
    - npm publish
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-alpha\d+|-beta\d+)?$/'

build_dgxr:
  <<: *unity_defaults
  stage: build stardust
  needs:
    - job: get-unity-version
  script:
    - echo $CI_JOB_ID
    - echo DGXR_VERSION=$CI_JOB_ID >> dgxr.env
    - cd ci
    - chmod +x ./build_package.sh && ./build_package.sh
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-alpha\d+|-beta\d+)?$/'
  artifacts:
    paths:
      - $UNITY_DIR/Packages/
    name: dgxr-$CI_COMMIT_TAG
    reports:
      dotenv: dgxr.env

